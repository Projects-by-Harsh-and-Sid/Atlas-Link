openapi: 3.1.0
info:
  title: Authentication and User Info API
  description: API to authenticate users and fetch their information using a pairing key.
  version: v1.0.0
servers:
  - url: https://composed-early-tadpole.ngrok-free.app/
paths:
  /getlogin:
    get:
      description: Initiates user authentication by providing a login URL and a pairing key.
      operationId: GetLogin
      responses:
        '200':
          description: Login URL and pairing key returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  login_url:
                    type: string
                    description: The URL to log in
                  pairing_key:
                    type: string
                    description: A unique pairing key for the user
                required:
                  - login_url
                  - pairing_key
  /validate_authentication_route:
    get:
      description: Validates the user's authentication status.
      operationId: ValidateAuthentication
      responses:
        '200':
          description: Authentication status returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  public_key:
                    type: string
                    description: The public key of the authenticated user
                  is_authenticated:
                    type: boolean
                    description: Whether the user is authenticated or not
                required:
                  - public_key
                  - is_authenticated
        '401':
          description: Unauthorized if pairing key is missing or invalid
  /item_detail/{mint_id}:
    get:
      description: Retrieves item details by mint ID
      operationId: GetItemDetailsByMintId
      parameters:
        - name: mint_id
          in: path
          required: true
          schema:
            type: string
          description: The mint ID of the item
      responses:
        '200':
          description: Item details returned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  # Add properties based on your Item_data structure
                  # For example:
                  name:
                    type: string
                    description: The name of the item
                  description:
                    type: string
                    description: A description of the item
                  # Add more properties as needed
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message
  /orders_by_assets/{mint_id}:
    get:
      description: Retrieves buy and sell orders for a specific asset
      operationId: GetOrdersByAsset
      parameters:
        - name: mint_id
          in: path
          required: true
          schema:
            type: string
          description: The mint ID of the asset
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  buy_orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        price_usdc:
                          type: number
                        quantity:
                          type: integer
                  sell_orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        price_usdc:
                          type: number
                        quantity:
                          type: integer
        '404':
          description: No orders found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status_code:
                    type: integer

  /orderbook_summary/{mint_id}:
    get:
      description: Retrieves a summary of the orderbook for a specific asset
      operationId: GetOrderbookSummary
      parameters:
        - name: mint_id
          in: path
          required: true
          schema:
            type: string
          description: The mint ID of the asset
      responses:
        '200':
          description: Orderbook summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  buy_orders:
                    $ref: '#/components/schemas/OrderSummary'
                  sell_orders:
                    $ref: '#/components/schemas/OrderSummary'
                  spread:
                    type: number
                  mid_price:
                    type: number
        '404':
          description: No orders found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status_code:
                    type: integer

  /player_details:
    get:
      summary: Retrieve player inventory and profile
      description: Get detailed information about the authenticated player's inventory and profile, excluding resources.
      operationId: GetPlayerDetails
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  publicKey:
                    type: string
                  avatarId:
                    type: string
                  factionRank:
                    type: integer
                  rank:
                    type: integer
                  country:
                    type: string
                  registrationDate:
                    type: string
                    format: date-time
                  total_value_of_account:
                    type: string
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        quantity:
                          type: string
                        valuePerAsset:
                          type: string
                        totalValue:
                          type: string
                        name:
                          type: string
                        symbol:
                          type: string
                        itemType:
                          type: string
                        rarity:
                          type: string
                        category:
                          type: string
                        image:
                          type: string
        '401':
          description: Unauthorized - User not authenticated or account not linked
        '500':
          description: Internal server error


components:
  schemas:
    OrderSummary:
      type: object
      properties:
        count:
          type: integer
        min_price:
          type: number
        max_price:
          type: number
        avg_price:
          type: number
        median_price:
          type: number
        total_quantity:
          type: integer
        price_quartiles:
          type: array
          items:
            type: number
        price_histogram:
          type: object
          properties:
            counts:
              type: array
              items:
                type: integer
            bin_edges:
              type: array
              items:
                type: number
