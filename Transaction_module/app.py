from flask import Flask, render_template, send_from_directory,jsonify
# import subprocess
import requests
import json


app = Flask(__name__)

@app.route('/')
def home():
    return render_template('main.html')

@app.route('/transaction')
def transaction():
    return render_template('transaction.html')


NODE_API_URL = 'http://localhost:3000/api/get_open_orders'
@app.route('/data')
def data():
    # try:
    #     # Run the Node.js script and capture the output
    #     result = subprocess.run(
    #         ['node', '../node_backend/data.js'],  # Replace with your actual path to Node.js script
    #         stdout=subprocess.PIPE,
    #         stderr=subprocess.PIPE
    #     )
        
    #     # Check if the Node.js script ran successfully
    #     if result.returncode != 0:
    #         return jsonify({"error": result.stderr.decode('utf-8')}), 500

    #     # Read the JSON output file generated by the Node.js script
    #     with open('open_orders.json', 'r') as file:
    #         open_orders = json.load(file)

    #     return jsonify(open_orders), 200

    # except Exception as e:
    #     return jsonify({"error": str(e)}), 500
    try:
        # Send a GET request to the Node.js API
        response = requests.get(NODE_API_URL)

        # If the request was successful, return the response from Node.js
        if response.status_code == 200:
            return jsonify(response.json()), 200
        else:
            return jsonify({
                "error": "Failed to fetch data from Node.js API",
                "status_code": response.status_code
            }), response.status_code

    except Exception as e:
        return jsonify({"error": str(e)}), 500
   

@app.route('/transaction_details.json')
def transaction_details():
    return send_from_directory('static', 'transaction_details.json')

if __name__ == '__main__':
    app.run(debug=True)